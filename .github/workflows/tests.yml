name: Run schedule tests

on:
  workflow_dispatch:

jobs:
  static_analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install Dependencies and library
        shell: bash
        run: |
          set -ux
          python -m pip install uv
          uv pip install --system .[lint]

      - name: Run ruff
        shell: bash
        run: ruff check

      - name: Run mypy
        shell: bash
        run: mypy

      - name: Run bandit
        shell: bash
        run: bandit -c pyproject.toml -r loader

      - name: Run Semgrep
        shell: bash
        run: semgrep scan --config auto --error
        
  test-basic:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies and library
        run: |
          python -m pip install uv
          uv pip install --system .[testing]

      - name: Create dir
        run: mkdir .sens/

      - name: Create json
        id: create-json
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "tokens.json"
          json: ${{ secrets.YOUTUBE_TOKEN }}
          dir: '.sens/'

      - name: Run pytest
        env:
          TOKEN: ${{ secrets.TOKEN }}
          DEBUG: ${{ secrets.DEBUG }}
          API_ID: ${{ secrets.API_ID }}
          API_HASH: ${{ secrets.API_HASH }}
          BOT_ID: ${{ secrets.BOT_ID }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          GROUP_ERROR_ID: ${{ secrets.GROUP_ERROR_ID }}
          GROUP_CACHE_ID: ${{ secrets.GROUP_CACHE_ID }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_URI: ${{ secrets.DB_URI }}
          DB_DEBUG: ${{ secrets.DB_DEBUG }}
          REDIS_URI: ${{ secrets.REDIS_URI }}
        run: pytest

      - name: cleanup
        run: rm -rf .sens
